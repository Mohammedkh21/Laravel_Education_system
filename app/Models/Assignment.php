<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Assignment extends Model
{
    use HasFactory;

    protected $fillable = [
        'id', 'title',	'description',	'type',	'degree',	'visibility',	'start_in',	'end_in','related_to',	'created_at',	'updated_at'
    ];
    protected $casts = [
        "visibility" => 'boolean'
    ];
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function ($assignment) {
            foreach ($assignment->documents as $document) { info('d'); info($assignment);
                $document->delete();
            }
        });
    }

    public function scopeVisibility(Builder $query): void
    {
        $query->where('visibility', true);
    }

    function assignmentable()
    {
        return $this->morphTo();
    }

    public function documents()
    {
        return $this->morphMany(Document::class, 'documentable');
    }

    public function grade(){
        return $this->morphOne(Grade::class,'gradeable');
    }

}
